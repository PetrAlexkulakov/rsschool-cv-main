{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO;AACP;AACO;AACP;AACO;AACP;AACO;AACP;AACO;AACP;AACO;AACP;AACO;AACP;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrD8C;AACO;AACrD;AACA;AACA;AACA,oEAA4B;AAC5B;AACA,CAAC;AACD;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAa;AACrB;AACA;AACA;;;;;;;;;;;;;;;;;;ACtDoE;AACF;AAClE;AACO;AACP;AACA,mEAA2B;AAC3B;AACA,kBAAkB,0DAAU;AAC5B,CAAC;AACD;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,6DAAqB;AAC7B,QAAQ,yDAAiB,6CAA6C,+CAAG,CAAC,GAAG,+CAAG,GAAG,MAAM,wDAAY,EAAE;AACvG;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACzBgD;AACb;AACnC;AACO;AACA;AACA;AACP;AACA;AACA;AACO;AACP;AACA,IAAI,4DAAoB;AACxB;AACA;AACO;AACP,QAAQ,4CAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAe;AACnB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACoB;AACpB;;;;;;UClDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNwC;AACP;AACO;AACS;AACjD;AACA,gBAAgB,uDAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD,KAAK;AACL;AACA;AACA;AACA,IAAI,2DAAmB;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA,qEAA6B;AAC7B;AACA,QAAQ,4CAAQ;AAChB,QAAQ,gDAAS;AACjB,QAAQ,oEAA4B;AACpC;AACA,QAAQ,6CAAK;AACb;AACA;AACA,CAAC;AACD;AACA,gEAAwB;AACxB;AACA,CAAC,C","sources":["webpack://rsschool-cv/./Gem_Puzzle/js/createAll.js","webpack://rsschool-cv/./Gem_Puzzle/js/game.js","webpack://rsschool-cv/./Gem_Puzzle/js/isWin.js","webpack://rsschool-cv/./Gem_Puzzle/js/moves_n_timer.js","webpack://rsschool-cv/./Gem_Puzzle/js/placeCards.js","webpack://rsschool-cv/webpack/bootstrap","webpack://rsschool-cv/webpack/runtime/define property getters","webpack://rsschool-cv/webpack/runtime/hasOwnProperty shorthand","webpack://rsschool-cv/webpack/runtime/make namespace object","webpack://rsschool-cv/./Gem_Puzzle/js/init.js"],"sourcesContent":["export let htmlBodyWrapper =  document.createElement('div');\r\nhtmlBodyWrapper.className='wrapper wrapper__body';\r\nexport let playingField= document.createElement('div');\r\nplayingField.className=\"wrapper playing-field\";\r\nexport let buttonPlace= document.createElement('div');\r\nbuttonPlace.className=\"wrapper button-place\";\r\nexport let timerPlace=document.createElement('div');\r\ntimerPlace.className=\"wrapper timer-place\";\r\nexport let playingPlace= document.createElement('div');\r\nplayingPlace.className='wrapper playing-place'\r\nexport let nowSize= document.createElement('div');\r\nnowSize.className='wrapper now_size';\r\nexport let otherSize= document.createElement('div');\r\notherSize.className='wrapper other_size';\r\nexport let movesCount=document.createElement('div');\r\nmovesCount.className='count-moves';\r\nmovesCount.innerHTML='Moves: 0';\r\nexport let timer=document.createElement('div');\r\ntimer.className='timer';\r\ntimer.innerHTML='Time:00:00';\r\nexport let endGame= document.createElement('div');\r\nendGame.className='end-game-display';\r\nexport let buttonShuffle= document.createElement('div');\r\nbuttonShuffle.className='button button-shuffle'\r\nbuttonShuffle.textContent='Shuffle and start'\r\nexport let buttonStop= document.createElement('div');\r\nbuttonStop.className='button button-stop'\r\nbuttonStop.textContent='Stop'\r\nexport let buttonSave= document.createElement('div');\r\nbuttonSave.className='button button-save'\r\nbuttonSave.textContent='Save'\r\nexport let buttonResult= document.createElement('div');\r\nbuttonResult.className='button button-result'\r\nbuttonResult.textContent='Results'\r\nexport let buttonSound= document.createElement('div');\r\nbuttonSound.className='button button-Sound'\r\nbuttonSound.textContent='Sound'\r\n\r\n\r\ndocument.body.append(htmlBodyWrapper);\r\ndocument.body.append(endGame);\r\nhtmlBodyWrapper.append(playingField);\r\nplayingField.append(buttonPlace);\r\nplayingField.append(timerPlace);\r\nplayingField.append(playingPlace);\r\nplayingField.append(nowSize);\r\nplayingField.append(otherSize);\r\ntimerPlace.append(movesCount);\r\ntimerPlace.append(timer);\r\nbuttonPlace.append(buttonShuffle);\r\nbuttonPlace.append(buttonSave);\r\nbuttonPlace.append(buttonStop);\r\nbuttonPlace.append(buttonResult);\r\nbuttonPlace.append(buttonSound);","import {increaseCount} from './moves_n_timer';\r\nimport { buttonSound,buttonStop } from './createAll';\r\n\r\n\r\nlet canAudio=true\r\nbuttonSound.addEventListener('click',function(){\r\n    canAudio= !canAudio\r\n})\r\n\r\n\r\nexport function cardShift(target, ourNumbers){\r\n    if(!target.classList.contains('card')) {\r\n        return false;\r\n    }\r\n    \r\n    let number = +target.innerHTML\r\n\r\n    let audioStone= new Audio()\r\n    audioStone.src='audio/stone.mp3'\r\n\r\n    if(ourNumbers.indexOf(number) != ourNumbers.length-1 &&\r\n    ourNumbers[ourNumbers.indexOf(number)+1]==ourNumbers.length  &&\r\n    (((ourNumbers.indexOf(number)+1) % (ourNumbers.length**(1/2))) != 0)){\r\n\r\n        ourNumbers[ourNumbers.indexOf(number)+1]=ourNumbers[ourNumbers.indexOf(number)]\r\n        ourNumbers[ourNumbers.indexOf(number)] = ourNumbers.length\r\n        increaseCount()\r\n        if(canAudio) audioStone.autoplay = true;\r\n    }\r\n    else if(ourNumbers.indexOf(number) != 0 &&\r\n    ourNumbers[ourNumbers.indexOf(number)-1]==ourNumbers.length &&\r\n    (ourNumbers.indexOf(number) % (ourNumbers.length**(1/2))) != 0){\r\n        \r\n        ourNumbers[ourNumbers.indexOf(number)-1]=ourNumbers[ourNumbers.indexOf(number)]\r\n        ourNumbers[ourNumbers.indexOf(number)+1] = ourNumbers.length\r\n        increaseCount()\r\n        if(canAudio) audioStone.autoplay = true;\r\n    }\r\n    else if(ourNumbers.indexOf(number)+ourNumbers.length**(1/2) <= ourNumbers.length-1 &&\r\n    ourNumbers[ourNumbers.indexOf(number) + ourNumbers.length**(1/2)]==ourNumbers.length){\r\n        \r\n        ourNumbers[ourNumbers.indexOf(number)+ourNumbers.length**(1/2)]=ourNumbers[ourNumbers.indexOf(number)]\r\n        ourNumbers[ourNumbers.indexOf(number)] = ourNumbers.length\r\n        increaseCount()\r\n        if(canAudio) audioStone.autoplay = true;\r\n    }\r\n    else if(ourNumbers.indexOf(number)-ourNumbers.length**(1/2) >= 0 &&\r\n    ourNumbers[ourNumbers.indexOf(number) - ourNumbers.length**(1/2)]==ourNumbers.length){\r\n        \r\n        ourNumbers[ourNumbers.indexOf(number)-ourNumbers.length**(1/2)]=ourNumbers[ourNumbers.indexOf(number)]\r\n        ourNumbers[ourNumbers.indexOf(number)+ourNumbers.length**(1/2)] = ourNumbers.length\r\n        increaseCount()\r\n        if(canAudio) audioStone.autoplay = true;\r\n    }\r\n}\r\n","import { movesCount, timer,endGame, buttonStop } from \"./createAll\";\r\nimport { countOfMoves,sec,min,timerStart } from \"./moves_n_timer\";\r\n\r\nexport let gameStop = false\r\n\r\nbuttonStop.addEventListener('click',function(){\r\n    gameStop = !gameStop\r\n    if(!gameStop) timerStart()\r\n})\r\n\r\nexport function isWin(ourNumbers){\r\n\r\n    let done = true;\r\n    \r\n    ourNumbers.forEach((number,index)=>{\r\n        if(index!=0 && number - ourNumbers[index-1] !== 1) done = false\r\n    })\r\n\r\n    if(done){\r\n\r\n        gameStop=true\r\n        endGame.style.display = 'block';\r\n        endGame.innerHTML = `Hurrah! You have solved the puzzle for ${min}:${sec}  and ${countOfMoves} moves!`\r\n\r\n    }\r\n}","import { movesCount, timer } from \"./createAll\";\r\nimport { gameStop } from \"./isWin\";\r\n\r\nexport let countOfMoves=0;\r\nexport var sec = 0;\r\nexport var min = 0;\r\n\r\n\r\n\r\nexport function increaseCount(){\r\n    countOfMoves++\r\n    movesCount.innerHTML= 'Moves:'+countOfMoves;\r\n}\r\n\r\nexport function timerStart(){\r\n    if(!gameStop) setTimeout(_place,1000);\r\n}\r\n\r\nfunction _tick(){\r\n    sec++;\r\n    if (sec >= 60) {\r\n        sec = 0;\r\n        min++;\r\n    }\r\n}\r\n\r\nfunction _place(){\r\n    _tick()\r\n    timer.innerHTML= 'Time' \r\n    + (min > 9 ? min : \"0\" + min)\r\n    + \":\" + (sec > 9 ? sec : \"0\" + sec);\r\n    timerStart()\r\n}\r\ntimerStart()","function placeCards(amount=16){\r\n    let Numbers16 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\r\n\r\n    do{\r\n        Numbers16 = _shuffle(Numbers16)\r\n    }while( _try(Numbers16)==false)\r\n    \r\n    return Numbers16\r\n}\r\n\r\nfunction _shuffle(Numbers){\r\n    var currentIndex = Numbers.length, temporaryValue, randomIndex\r\n\r\n  while (currentIndex != 0) {\r\n\r\n    randomIndex = Math.floor(Math.random() * currentIndex)\r\n    currentIndex -= 1;\r\n\r\n    temporaryValue = Numbers[currentIndex];\r\n    Numbers[currentIndex] = Numbers[randomIndex]\r\n    Numbers[randomIndex] = temporaryValue\r\n  }\r\n\r\n  return Numbers;\r\n}\r\n\r\nfunction _try(Numbers){\r\n    let N=0\r\n    let e= Numbers.indexOf(Numbers.length) \r\n    let k=Numbers.length**(1/2)\r\n\r\n    do{\r\n        k--\r\n    }while(e<k*Numbers.length**(1/2))\r\n    e=k+1\r\n\r\n    Numbers.forEach((number,index)=>{\r\n        let count=0\r\n\r\n        for(let i=index+1; i<Numbers.length;i++){\r\n            if(Numbers[i] < number) count++\r\n        }\r\n        N+=count+e\r\n    })\r\n\r\n    if(N%2) return true\r\n    return false\r\n}\r\n\r\nexport {placeCards};\r\n// console.log(placeCards())","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {placeCards} from './placeCards';\r\nimport {cardShift} from './game';\r\nimport {isWin, gameStop} from './isWin';\r\nimport {playingPlace,endGame} from './createAll';\r\n\r\nlet ourNumbers= placeCards();\r\n\r\nfunction replaceCard(ourNumbers){\r\n\r\nourNumbers.forEach((number)=>{\r\n    let numberElement = document.createElement('div')\r\n    if(number != ourNumbers.length){\r\n        numberElement.innerHTML = number\r\n        numberElement.className = `card ${number}`\r\n    }else{\r\n        //numberElement.innerHTML = number\r\n        numberElement.className = `card card_empty`\r\n    }\r\n    playingPlace.append(numberElement)\r\n})\r\n}\r\n\r\nreplaceCard(ourNumbers)\r\n\r\nplayingPlace.addEventListener('click',function (event){\r\n\r\n    if(!gameStop){\r\n        cardShift(event.target, ourNumbers);\r\n        playingPlace.replaceChildren();\r\n        replaceCard(ourNumbers);\r\n        isWin(ourNumbers);\r\n    }\r\n\r\n})\r\n\r\nendGame.addEventListener('click',function(){\r\n    location.reload()\r\n})"],"names":[],"sourceRoot":""}